from django.db.transaction import atomicfrom rest_framework.serializers import ModelSerializerfrom dairyapp.models import Quest, Done, Error, Problem, Knowledgeclass DoneModelSerializer(ModelSerializer):	class Meta:		model = Done		fields = "text", "type"class ErrorModelSerializer(ModelSerializer):	class Meta:		model = Error		fields = "text", "type"class ProblemModelSerializer(ModelSerializer):	class Meta:		model = Problem		fields = "text", "type"class KnowledgeModelSerializer(ModelSerializer):	class Meta:		model = Knowledge		fields = "text", "type"class QuestModelSerializer(ModelSerializer):	done = DoneModelSerializer(many=True)	errors = ErrorModelSerializer(many=True)	problems = ProblemModelSerializer(many=True)	knowledge = KnowledgeModelSerializer(many=True)	class Meta:		model = Quest		fields = "theme_description", "done", "errors", "problems", "knowledge"	def update(self, instance, validated_data):		with atomic():			instance.theme_description = validated_data.pop("theme_description")			for item_class, key in (Done, "done"), (Error, "errors"), (Problem, "problems"), (Knowledge, "knowledge"):				item_class.objects.filter(quest=instance).delete()				data_to_create = []				for data in validated_data.pop(key):					data["quest"] = instance					data_to_create.append(item_class(**data))				item_class.objects.bulk_create(data_to_create)			instance.save()		return instance